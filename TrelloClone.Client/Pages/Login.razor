@page "/login"
@using TrelloClone.Shared.DTOs
@using TrelloClone.Client.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Login - TrelloClone</PageTitle>

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <div class="auth-logo">
                <i class="bi bi-kanban"></i>
                <span>TrelloClone</span>
            </div>
            <h1>Log in to your account</h1>
            <p>Welcome back! Please enter your details.</p>
        </div>

        <div class="auth-body">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="auth-error" role="alert">
                    <i class="bi bi-exclamation-circle"></i>
                    <span>@errorMessage</span>
                </div>
            }

            <EditForm Model="loginRequest" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="email" class="form-label">Email</label>
                    <InputText id="email" class="form-control" @bind-Value="loginRequest.Email" placeholder="Enter your email" />
                    <ValidationMessage For="@(() => loginRequest.Email)" />
                </div>

                <div class="form-group">
                    <label for="password" class="form-label">Password</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="loginRequest.Password" placeholder="Enter your password" />
                    <ValidationMessage For="@(() => loginRequest.Password)" />
                </div>

                <button type="submit" class="auth-button" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner"></span>
                    }
                    Log in
                </button>
            </EditForm>

            <div class="auth-footer">
                <p>Don't have an account? <a href="/register" class="auth-link">Sign up</a></p>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new();
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Check if already authenticated
        if (await AuthService.IsAuthenticatedAsync())
        {
            Navigation.NavigateTo("/boards");
        }
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            await AuthService.LoginAsync(loginRequest);
            Navigation.NavigateTo("/boards");
        }
        catch (UnauthorizedAccessException)
        {
            errorMessage = "Invalid email or password. Please try again.";
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}